{"ast":null,"code":"var _jsxFileName = \"/Users/arthurmichalland/code/Arth-M/react-first-tutorial/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n  // const history = [];\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n      // setXIsNext(false);\n    } else {\n      nextSquares[i] = \"O\";\n      // setXIsNext(true);\n    }\n    onPlay(nextSquares);\n  }\n  // history.push(squares);\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  function FrSquare(y) {\n    const frontSquares = [];\n    for (const i of [0, 1, 2]) {\n      console.log(i);\n      frontSquares.push(/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[i + y.y],\n        onSquareClick: () => handleClick(i + y.y)\n      }, (i + y.y) * 10, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }, this));\n    }\n    return frontSquares;\n  }\n  function BoardRows() {\n    const board = [];\n    for (const y of [0, 3, 6]) {\n      board.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: /*#__PURE__*/_jsxDEV(FrSquare, {\n          y: y\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 56\n        }, this)\n      }, y * 10, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this));\n    }\n    return board;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoardRows, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  // const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    // setXIsNext(!xIsNext);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    // setXIsNext(nextMove % 2 === 0);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0 && move != currentMove) {\n      description = 'Go to move ' + move;\n    } else if (move > 0 && move === currentMove) {\n      description = 'You are at move ' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","status","FrSquare","y","frontSquares","console","log","push","BoardRows","board","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","map","move","description","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/arthurmichalland/code/Arth-M/react-first-tutorial/src/App.js"],"sourcesContent":["import {useState} from 'react';\n\nfunction Square({value, onSquareClick}) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({xIsNext, squares, onPlay}) {\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n  // const history = [];\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i]=\"X\";\n      // setXIsNext(false);\n    }\n    else {\n      nextSquares[i]=\"O\";\n      // setXIsNext(true);\n    }\n    onPlay(nextSquares)\n  }\n  // history.push(squares);\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  function FrSquare(y) {\n    const frontSquares = []\n      for (const i of [0,1,2]) {\n        console.log(i);\n        frontSquares.push(<Square value={squares[i+y.y]} onSquareClick={()=> handleClick(i+y.y)} key={(i+y.y)*10}/>);\n      }\n    return frontSquares;\n  }\n  function BoardRows () {\n    const board = [];\n    for (const y of [0,3,6]) {\n      board.push(<div className='board-row' key={y*10}><FrSquare y={y} /></div>);\n    }\n    return board\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <BoardRows />\n      {/* <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={()=> handleClick(0)}/>\n        <Square value={squares[1]} onSquareClick={()=>handleClick(1)}/>\n        <Square value={squares[2]} onSquareClick={()=>handleClick(2)}/>\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={()=>handleClick(3)}/>\n        <Square value={squares[4]} onSquareClick={()=>handleClick(4)}/>\n        <Square value={squares[5]} onSquareClick={()=>handleClick(5)}/>\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={()=>handleClick(6)}/>\n        <Square value={squares[7]} onSquareClick={()=>handleClick(7)}/>\n        <Square value={squares[8]} onSquareClick={()=>handleClick(8)}/>\n      </div> */}\n\n    </>\n  );\n}\n\nexport default function Game() {\n  // const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    // setXIsNext(!xIsNext);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    // setXIsNext(nextMove % 2 === 0);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0 && move != currentMove) {\n      description = 'Go to move ' + move;\n    } else if (move > 0 && move === currentMove){\n      description = 'You are at move ' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay}/>\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}